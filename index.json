{
  "api/SimpleVersion.Comparers.html": {
    "href": "api/SimpleVersion.Comparers.html",
    "title": "Namespace SimpleVersion.Comparers",
    "keywords": "Namespace SimpleVersion.Comparers Classes VersionConfigurationLabelComparer Compares VersionConfiguration version and labels."
  },
  "api/SimpleVersion.Comparers.VersionConfigurationLabelComparer.html": {
    "href": "api/SimpleVersion.Comparers.VersionConfigurationLabelComparer.html",
    "title": "Class VersionConfigurationLabelComparer",
    "keywords": "Class VersionConfigurationLabelComparer Compares VersionConfiguration version and labels. Inheritance System.Object VersionConfigurationLabelComparer Implements System.Collections.Generic.IEqualityComparer < VersionConfiguration > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Comparers Assembly : SimpleVersion.Core.dll Syntax public class VersionConfigurationLabelComparer : IEqualityComparer<VersionConfiguration> Methods | Improve this Doc View Source Equals(VersionConfiguration, VersionConfiguration) Compares two VersionConfiguration for version and label equivalence. Declaration public bool Equals(VersionConfiguration x, VersionConfiguration y) Parameters Type Name Description VersionConfiguration x The first VersionConfiguration to compare. VersionConfiguration y The second VersionConfiguration to compare. Returns Type Description System.Boolean True if equal, otherwise false. | Improve this Doc View Source GetHashCode(VersionConfiguration) Generates a hashcode for the given configuration . Declaration public int GetHashCode(VersionConfiguration configuration) Parameters Type Name Description VersionConfiguration configuration The VersionConfiguration to generate a hashcode for. Returns Type Description System.Int32 The generated hashcode. Implements System.Collections.Generic.IEqualityComparer<T> Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Configuration.BranchConfiguration.html": {
    "href": "api/SimpleVersion.Configuration.BranchConfiguration.html",
    "title": "Class BranchConfiguration",
    "keywords": "Class BranchConfiguration Encapsulates configuration for branches. Inheritance System.Object BranchConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Configuration Assembly : SimpleVersion.Abstractions.dll Syntax public class BranchConfiguration Properties | Improve this Doc View Source Overrides Gets or sets the configuration for branches which override the defaults. See BranchOverrideConfiguration for further details. Declaration public List<BranchOverrideConfiguration> Overrides { get; set; } Property Value Type Description System.Collections.Generic.List < BranchOverrideConfiguration > | Improve this Doc View Source Release Gets or sets the list of branches that may produce release versions. Declaration public List<string> Release { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Configuration.BranchOverrideConfiguration.html": {
    "href": "api/SimpleVersion.Configuration.BranchOverrideConfiguration.html",
    "title": "Class BranchOverrideConfiguration",
    "keywords": "Class BranchOverrideConfiguration Encapsulates configuration for branch overrides. Inheritance System.Object BranchOverrideConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Configuration Assembly : SimpleVersion.Abstractions.dll Syntax public class BranchOverrideConfiguration Properties | Improve this Doc View Source InsertLabel Gets or sets the label parts to insert at specific indexes of the label in the generated version. Declaration public Dictionary<int, string> InsertLabel { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.Int32 , System.String > | Improve this Doc View Source InsertMetadata Gets or sets the metadata parts to insert at specific indexes of the metadata in the generated version. Declaration public Dictionary<int, string> InsertMetadata { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.Int32 , System.String > | Improve this Doc View Source Label Gets or sets the label parts to override in the generated version. Declaration public List<string> Label { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source Match Gets or sets the regular expression string used to identify matching to a branch to identify branch matches. Declaration public string Match { get; set; } Property Value Type Description System.String | Improve this Doc View Source Metadata Gets or sets the metadata parts to use in the generated version. Declaration public List<string> Metadata { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source PostfixLabel Gets or sets the label parts to insert at the end of the label in the generated version. Declaration public List<string> PostfixLabel { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source PostfixMetadata Gets or sets the metadata parts to insert at the end of the metadata in the generated version. Declaration public List<string> PostfixMetadata { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source PrefixLabel Gets or sets the label parts to insert at the start of the label in the generated version. Declaration public List<string> PrefixLabel { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source PrefixMetadata Gets or sets the metadata parts to insert at the start of the metadata in the generated version. Declaration public List<string> PrefixMetadata { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Configuration.html": {
    "href": "api/SimpleVersion.Configuration.html",
    "title": "Namespace SimpleVersion.Configuration",
    "keywords": "Namespace SimpleVersion.Configuration Classes BranchConfiguration Encapsulates configuration for branches. BranchOverrideConfiguration Encapsulates configuration for branch overrides. RepositoryConfiguration Encapsulates configuration loaded from '.simpleversion.json'. VersionConfiguration Configuration for the version to be calculated."
  },
  "api/SimpleVersion.Configuration.RepositoryConfiguration.html": {
    "href": "api/SimpleVersion.Configuration.RepositoryConfiguration.html",
    "title": "Class RepositoryConfiguration",
    "keywords": "Class RepositoryConfiguration Encapsulates configuration loaded from '.simpleversion.json'. Inheritance System.Object VersionConfiguration RepositoryConfiguration Inherited Members VersionConfiguration.Version VersionConfiguration.OffSet VersionConfiguration.Label VersionConfiguration.Metadata System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Configuration Assembly : SimpleVersion.Abstractions.dll Syntax public class RepositoryConfiguration : VersionConfiguration Properties | Improve this Doc View Source Branches Gets or sets the information on branches. See BranchConfiguration for further details. Declaration public BranchConfiguration Branches { get; set; } Property Value Type Description BranchConfiguration Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Configuration.VersionConfiguration.html": {
    "href": "api/SimpleVersion.Configuration.VersionConfiguration.html",
    "title": "Class VersionConfiguration",
    "keywords": "Class VersionConfiguration Configuration for the version to be calculated. Inheritance System.Object VersionConfiguration RepositoryConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Configuration Assembly : SimpleVersion.Abstractions.dll Syntax public class VersionConfiguration Properties | Improve this Doc View Source Label Gets or sets the label parts to use in the generated version. Declaration public List<string> Label { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source Metadata Gets or sets the Metadata parts to use in the generated version. Declaration public List<string> Metadata { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source OffSet Gets or sets the offset to apply to the generated height. Declaration public int OffSet { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Version Gets or sets the base version string. Declaration public string Version { get; set; } Property Value Type Description System.String Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Constants.html": {
    "href": "api/SimpleVersion.Constants.html",
    "title": "Class Constants",
    "keywords": "Class Constants Utility class to contain constants. Inheritance System.Object Constants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion Assembly : SimpleVersion.Abstractions.dll Syntax public static class Constants Fields | Improve this Doc View Source ConfigurationFileName The file name of the configuration file. Declaration public const string ConfigurationFileName = \".simpleversion.json\" Field Value Type Description System.String"
  },
  "api/SimpleVersion.Environment.AzureDevopsEnvironment.html": {
    "href": "api/SimpleVersion.Environment.AzureDevopsEnvironment.html",
    "title": "Class AzureDevopsEnvironment",
    "keywords": "Class AzureDevopsEnvironment Represents the environment when running on Azure Devops. Inheritance System.Object BaseVersionEnvironment AzureDevopsEnvironment Implements IVersionEnvironment Inherited Members BaseVersionEnvironment.CanonicalBranchTrimmer BaseVersionEnvironment.CanonicalBranchName BaseVersionEnvironment.BranchName BaseVersionEnvironment.Variables System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Environment Assembly : SimpleVersion.Core.dll Syntax public class AzureDevopsEnvironment : BaseVersionEnvironment, IVersionEnvironment Constructors | Improve this Doc View Source AzureDevopsEnvironment(IEnvironmentVariableAccessor) Initializes a new instance of the AzureDevopsEnvironment class. Declaration public AzureDevopsEnvironment(IEnvironmentVariableAccessor accessor) Parameters Type Name Description IEnvironmentVariableAccessor accessor The accessor for environment variables. Properties | Improve this Doc View Source IsValid Gets a value indicating whether the environment is valid for the current request. Declaration public override bool IsValid { get; } Property Value Type Description System.Boolean Overrides BaseVersionEnvironment.IsValid Implements IVersionEnvironment Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Environment.BaseVersionEnvironment.html": {
    "href": "api/SimpleVersion.Environment.BaseVersionEnvironment.html",
    "title": "Class BaseVersionEnvironment",
    "keywords": "Class BaseVersionEnvironment Base implementation to read environment variables. Inheritance System.Object BaseVersionEnvironment AzureDevopsEnvironment DefaultVersionEnvironment Implements IVersionEnvironment Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Environment Assembly : SimpleVersion.Abstractions.dll Syntax public abstract class BaseVersionEnvironment : IVersionEnvironment Constructors | Improve this Doc View Source BaseVersionEnvironment(IEnvironmentVariableAccessor) Initializes a new instance of the BaseVersionEnvironment class. Declaration protected BaseVersionEnvironment(IEnvironmentVariableAccessor accessor) Parameters Type Name Description IEnvironmentVariableAccessor accessor The accessor for environment variables. Fields | Improve this Doc View Source CanonicalBranchTrimmer Use to normalize branch names from a canonical name. Declaration protected static readonly Regex CanonicalBranchTrimmer Field Value Type Description System.Text.RegularExpressions.Regex Properties | Improve this Doc View Source BranchName Gets the branch name from the environment. Declaration public string BranchName { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source CanonicalBranchName Gets the canonical branch name from the environment. Declaration public string CanonicalBranchName { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source IsValid Gets a value indicating whether the environment is valid for the current request. Declaration public abstract bool IsValid { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Variables Gets the IEnvironmentVariableAccessor to access environment variables. Declaration protected IEnvironmentVariableAccessor Variables { get; } Property Value Type Description IEnvironmentVariableAccessor Implements IVersionEnvironment Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Environment.DefaultVersionEnvironment.html": {
    "href": "api/SimpleVersion.Environment.DefaultVersionEnvironment.html",
    "title": "Class DefaultVersionEnvironment",
    "keywords": "Class DefaultVersionEnvironment Fallback version environment. Inheritance System.Object BaseVersionEnvironment DefaultVersionEnvironment Implements IVersionEnvironment Inherited Members BaseVersionEnvironment.CanonicalBranchTrimmer BaseVersionEnvironment.CanonicalBranchName BaseVersionEnvironment.BranchName BaseVersionEnvironment.Variables System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Environment Assembly : SimpleVersion.Core.dll Syntax public class DefaultVersionEnvironment : BaseVersionEnvironment, IVersionEnvironment Constructors | Improve this Doc View Source DefaultVersionEnvironment(IEnvironmentVariableAccessor) Initializes a new instance of the DefaultVersionEnvironment class. Declaration public DefaultVersionEnvironment(IEnvironmentVariableAccessor accessor) Parameters Type Name Description IEnvironmentVariableAccessor accessor The accessor for environment variables. Properties | Improve this Doc View Source IsValid Gets a value indicating whether the environment is valid for the current request. Declaration public override bool IsValid { get; } Property Value Type Description System.Boolean Overrides BaseVersionEnvironment.IsValid Implements IVersionEnvironment Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Environment.EnvironmentVariableAccessor.html": {
    "href": "api/SimpleVersion.Environment.EnvironmentVariableAccessor.html",
    "title": "Class EnvironmentVariableAccessor",
    "keywords": "Class EnvironmentVariableAccessor Exposes access to environment variables. Inheritance System.Object EnvironmentVariableAccessor Implements IEnvironmentVariableAccessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Environment Assembly : SimpleVersion.Core.dll Syntax public class EnvironmentVariableAccessor : IEnvironmentVariableAccessor Methods | Improve this Doc View Source GetVariable(String) Gets the value of the given variable name. Declaration public string GetVariable(string name) Parameters Type Name Description System.String name The name of the variable to retrieve. Returns Type Description System.String The value of the given variable. Implements IEnvironmentVariableAccessor Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Environment.html": {
    "href": "api/SimpleVersion.Environment.html",
    "title": "Namespace SimpleVersion.Environment",
    "keywords": "Namespace SimpleVersion.Environment Classes AzureDevopsEnvironment Represents the environment when running on Azure Devops. BaseVersionEnvironment Base implementation to read environment variables. DefaultVersionEnvironment Fallback version environment. EnvironmentVariableAccessor Exposes access to environment variables. Interfaces IEnvironmentVariableAccessor Supports accessing environment variables. IVersionEnvironment Contract for accessing environment variables for a version environment."
  },
  "api/SimpleVersion.Environment.IEnvironmentVariableAccessor.html": {
    "href": "api/SimpleVersion.Environment.IEnvironmentVariableAccessor.html",
    "title": "Interface IEnvironmentVariableAccessor",
    "keywords": "Interface IEnvironmentVariableAccessor Supports accessing environment variables. Namespace : SimpleVersion.Environment Assembly : SimpleVersion.Abstractions.dll Syntax public interface IEnvironmentVariableAccessor Methods | Improve this Doc View Source GetVariable(String) Gets the value of the given variable name. Declaration string GetVariable(string name) Parameters Type Name Description System.String name The name of the variable to retrieve. Returns Type Description System.String The value of the given variable. Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Environment.IVersionEnvironment.html": {
    "href": "api/SimpleVersion.Environment.IVersionEnvironment.html",
    "title": "Interface IVersionEnvironment",
    "keywords": "Interface IVersionEnvironment Contract for accessing environment variables for a version environment. Namespace : SimpleVersion.Environment Assembly : SimpleVersion.Abstractions.dll Syntax public interface IVersionEnvironment Properties | Improve this Doc View Source BranchName Gets the branch name from the environment. Declaration string BranchName { get; } Property Value Type Description System.String | Improve this Doc View Source CanonicalBranchName Gets the canonical branch name from the environment. Declaration string CanonicalBranchName { get; } Property Value Type Description System.String | Improve this Doc View Source IsValid Gets a value indicating whether the environment is valid for the current request. Declaration bool IsValid { get; } Property Value Type Description System.Boolean Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Exceptions.GitException.html": {
    "href": "api/SimpleVersion.Exceptions.GitException.html",
    "title": "Class GitException",
    "keywords": "Class GitException Represents a Git error within the application. Inheritance System.Object System.Exception GitException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : SimpleVersion.Exceptions Assembly : SimpleVersion.Core.dll Syntax public class GitException : Exception, ISerializable Constructors | Improve this Doc View Source GitException() Initializes a new instance of the GitException class. Declaration public GitException() | Improve this Doc View Source GitException(String) Initializes a new instance of the GitException class. Declaration public GitException(string message) Parameters Type Name Description System.String message The user message. | Improve this Doc View Source GitException(String, Exception) Initializes a new instance of the GitException class. Declaration public GitException(string message, Exception innerException) Parameters Type Name Description System.String message The exception message. System.Exception innerException An System.Exception to be wrapped. Implements System.Runtime.Serialization.ISerializable Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Exceptions.html": {
    "href": "api/SimpleVersion.Exceptions.html",
    "title": "Namespace SimpleVersion.Exceptions",
    "keywords": "Namespace SimpleVersion.Exceptions Classes GitException Represents a Git error within the application."
  },
  "api/SimpleVersion.Extensions.html": {
    "href": "api/SimpleVersion.Extensions.html",
    "title": "Namespace SimpleVersion.Extensions",
    "keywords": "Namespace SimpleVersion.Extensions Classes StringExtensions Extensions to support string handling."
  },
  "api/SimpleVersion.Extensions.StringExtensions.html": {
    "href": "api/SimpleVersion.Extensions.StringExtensions.html",
    "title": "Class StringExtensions",
    "keywords": "Class StringExtensions Extensions to support string handling. Inheritance System.Object StringExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Extensions Assembly : SimpleVersion.Core.dll Syntax public static class StringExtensions Methods | Improve this Doc View Source DefaultIfNullOrWhiteSpace(String, String) Returns the current value or a specified default if the value is null or white space. Declaration public static string DefaultIfNullOrWhiteSpace(this string value, string defaultValue) Parameters Type Name Description System.String value The value to validate to check. System.String defaultValue The value to return as default. Returns Type Description System.String value or defaultValue if value is null or white space. | Improve this Doc View Source ToBool(String) Converts a string value to a boolean. Declaration public static bool ToBool(this string value) Parameters Type Name Description System.String value The value to be converted. Returns Type Description System.Boolean True if 0 or \"True\" (case insensitive), otherwise false."
  },
  "api/SimpleVersion.GitVersionRepository.html": {
    "href": "api/SimpleVersion.GitVersionRepository.html",
    "title": "Class GitVersionRepository",
    "keywords": "Class GitVersionRepository Represents a git repository. Inheritance System.Object GitVersionRepository Implements IVersionRepository Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion Assembly : SimpleVersion.Core.dll Syntax public class GitVersionRepository : IVersionRepository Constructors | Improve this Doc View Source GitVersionRepository(String, IVersionEnvironment, ISerializer, IEnumerable<IVersionProcessor>) Initializes a new instance of the GitVersionRepository class. Declaration public GitVersionRepository(string path, IVersionEnvironment environment, ISerializer serializer, IEnumerable<IVersionProcessor> processors) Parameters Type Name Description System.String path The path to the repository. IVersionEnvironment environment The environment for the invocation. ISerializer serializer The serializer for reading documents. System.Collections.Generic.IEnumerable < IVersionProcessor > processors The processors to be called on. Methods | Improve this Doc View Source GetResult() Gets the VersionResult for the repository. Declaration public VersionResult GetResult() Returns Type Description VersionResult A populated VersionResult . Implements IVersionRepository Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.html": {
    "href": "api/SimpleVersion.html",
    "title": "Namespace SimpleVersion",
    "keywords": "Namespace SimpleVersion Classes Constants Utility class to contain constants. GitVersionRepository Represents a git repository. VersionCalculator Entry point for version calculation. VersionResult Models the result object returned from version calculation. Interfaces ISerializer Handles serialization. IVersionCalculator Contract for the calculation process. Enables collection of processes and invocation to get version results. IVersionRepository Exposes access to repository information."
  },
  "api/SimpleVersion.ISerializer.html": {
    "href": "api/SimpleVersion.ISerializer.html",
    "title": "Interface ISerializer",
    "keywords": "Interface ISerializer Handles serialization. Namespace : SimpleVersion Assembly : SimpleVersion.Abstractions.dll Syntax public interface ISerializer Methods | Improve this Doc View Source Deserialize<T>(String) Deserializes the given value into an new instance of T . Declaration T Deserialize<T>(string value) Parameters Type Name Description System.String value A string representation of T . Returns Type Description T An new instance of T populated from value . Type Parameters Name Description T The type to deserialize. | Improve this Doc View Source Serialize(Object) Serializes the given System.Object . Declaration string Serialize(object value) Parameters Type Name Description System.Object value The instance value. Returns Type Description System.String A string representation of the given value . Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.IVersionCalculator.html": {
    "href": "api/SimpleVersion.IVersionCalculator.html",
    "title": "Interface IVersionCalculator",
    "keywords": "Interface IVersionCalculator Contract for the calculation process. Enables collection of processes and invocation to get version results. Namespace : SimpleVersion Assembly : SimpleVersion.Abstractions.dll Syntax public interface IVersionCalculator Methods | Improve this Doc View Source GetResult() Gets the processed version result. Declaration VersionResult GetResult() Returns Type Description VersionResult A complete VersionResult instance. | Improve this Doc View Source WriteResult(TextWriter) Writes the processed version result to the output . Declaration void WriteResult(TextWriter output) Parameters Type Name Description System.IO.TextWriter output The writer for the result. Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.IVersionRepository.html": {
    "href": "api/SimpleVersion.IVersionRepository.html",
    "title": "Interface IVersionRepository",
    "keywords": "Interface IVersionRepository Exposes access to repository information. Namespace : SimpleVersion Assembly : SimpleVersion.Abstractions.dll Syntax public interface IVersionRepository Methods | Improve this Doc View Source GetResult() Gets the VersionResult for the repository. Declaration VersionResult GetResult() Returns Type Description VersionResult A populated VersionResult . Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Pipeline.Formatting.html": {
    "href": "api/SimpleVersion.Pipeline.Formatting.html",
    "title": "Namespace SimpleVersion.Pipeline.Formatting",
    "keywords": "Namespace SimpleVersion.Pipeline.Formatting Classes Semver1FormatProcessor Processes the Semver 1 format. Semver2FormatProcessor Process the Semver 2 format. VersionFormatProcessor Processes the version string."
  },
  "api/SimpleVersion.Pipeline.Formatting.Semver1FormatProcessor.html": {
    "href": "api/SimpleVersion.Pipeline.Formatting.Semver1FormatProcessor.html",
    "title": "Class Semver1FormatProcessor",
    "keywords": "Class Semver1FormatProcessor Processes the Semver 1 format. Inheritance System.Object Semver1FormatProcessor Implements IVersionProcessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Pipeline.Formatting Assembly : SimpleVersion.Core.dll Syntax public class Semver1FormatProcessor : IVersionProcessor Fields | Improve this Doc View Source FormatKey The key used to identify this format. Declaration public const string FormatKey = \"Semver1\" Field Value Type Description System.String Methods | Improve this Doc View Source Process(IVersionContext) Process the given context updating its state if needed. Declaration public void Process(IVersionContext context) Parameters Type Name Description IVersionContext context The IVersionContext to process. Implements IVersionProcessor Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Pipeline.Formatting.Semver2FormatProcessor.html": {
    "href": "api/SimpleVersion.Pipeline.Formatting.Semver2FormatProcessor.html",
    "title": "Class Semver2FormatProcessor",
    "keywords": "Class Semver2FormatProcessor Process the Semver 2 format. Inheritance System.Object Semver2FormatProcessor Implements IVersionProcessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Pipeline.Formatting Assembly : SimpleVersion.Core.dll Syntax public class Semver2FormatProcessor : IVersionProcessor Fields | Improve this Doc View Source FormatKey The key used to identify this format. Declaration public const string FormatKey = \"Semver2\" Field Value Type Description System.String Methods | Improve this Doc View Source Process(IVersionContext) Process the given context updating its state if needed. Declaration public void Process(IVersionContext context) Parameters Type Name Description IVersionContext context The IVersionContext to process. Implements IVersionProcessor Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Pipeline.Formatting.VersionFormatProcessor.html": {
    "href": "api/SimpleVersion.Pipeline.Formatting.VersionFormatProcessor.html",
    "title": "Class VersionFormatProcessor",
    "keywords": "Class VersionFormatProcessor Processes the version string. Inheritance System.Object VersionFormatProcessor Implements IVersionProcessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Pipeline.Formatting Assembly : SimpleVersion.Core.dll Syntax public class VersionFormatProcessor : IVersionProcessor Methods | Improve this Doc View Source Process(IVersionContext) Process the given context updating its state if needed. Declaration public void Process(IVersionContext context) Parameters Type Name Description IVersionContext context The IVersionContext to process. Implements IVersionProcessor Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Pipeline.html": {
    "href": "api/SimpleVersion.Pipeline.html",
    "title": "Namespace SimpleVersion.Pipeline",
    "keywords": "Namespace SimpleVersion.Pipeline Classes VersionContext Encapsulates state for a version request. Interfaces IVersionContext Encapsulates state during version calculation. IVersionProcessor Handles processing of a VersionContext ."
  },
  "api/SimpleVersion.Pipeline.IVersionContext.html": {
    "href": "api/SimpleVersion.Pipeline.IVersionContext.html",
    "title": "Interface IVersionContext",
    "keywords": "Interface IVersionContext Encapsulates state during version calculation. Namespace : SimpleVersion.Pipeline Assembly : SimpleVersion.Abstractions.dll Syntax public interface IVersionContext Properties | Improve this Doc View Source Configuration Gets the VersionConfiguration . Declaration VersionConfiguration Configuration { get; } Property Value Type Description VersionConfiguration | Improve this Doc View Source Environment Gets the IVersionEnvironment . Declaration IVersionEnvironment Environment { get; } Property Value Type Description IVersionEnvironment | Improve this Doc View Source Result Gets the VersionResult . Declaration VersionResult Result { get; } Property Value Type Description VersionResult Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Pipeline.IVersionProcessor.html": {
    "href": "api/SimpleVersion.Pipeline.IVersionProcessor.html",
    "title": "Interface IVersionProcessor",
    "keywords": "Interface IVersionProcessor Handles processing of a VersionContext . Namespace : SimpleVersion.Pipeline Assembly : SimpleVersion.Abstractions.dll Syntax public interface IVersionProcessor Methods | Improve this Doc View Source Process(IVersionContext) Process the given context updating its state if needed. Declaration void Process(IVersionContext context) Parameters Type Name Description IVersionContext context The IVersionContext to process. Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Pipeline.VersionContext.html": {
    "href": "api/SimpleVersion.Pipeline.VersionContext.html",
    "title": "Class VersionContext",
    "keywords": "Class VersionContext Encapsulates state for a version request. Inheritance System.Object VersionContext Implements IVersionContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Pipeline Assembly : SimpleVersion.Abstractions.dll Syntax public class VersionContext : IVersionContext Constructors | Improve this Doc View Source VersionContext(IVersionEnvironment, VersionConfiguration, VersionResult) Initializes a new instance of the VersionContext class. Declaration public VersionContext(IVersionEnvironment environment, VersionConfiguration configuration, VersionResult result) Parameters Type Name Description IVersionEnvironment environment The IVersionEnvironment for the invocation. VersionConfiguration configuration The VersionConfiguration for the current branch. VersionResult result The VersionResult to collect final version details. Properties | Improve this Doc View Source Configuration Gets the VersionConfiguration . Declaration public VersionConfiguration Configuration { get; } Property Value Type Description VersionConfiguration | Improve this Doc View Source Environment Gets the IVersionEnvironment . Declaration public IVersionEnvironment Environment { get; } Property Value Type Description IVersionEnvironment | Improve this Doc View Source Result Gets the VersionResult . Declaration public VersionResult Result { get; } Property Value Type Description VersionResult Implements IVersionContext Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Rules.BaseBranchNameTokenRule.html": {
    "href": "api/SimpleVersion.Rules.BaseBranchNameTokenRule.html",
    "title": "Class BaseBranchNameTokenRule",
    "keywords": "Class BaseBranchNameTokenRule Base implementation to apply rules for branch name tokens. Inheritance System.Object BaseBranchNameTokenRule BranchNameSuffixTokenRule BranchNameTokenRule ShortBranchNameTokenRule Implements ITokenRule < System.String > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Rules Assembly : SimpleVersion.Core.dll Syntax public abstract class BaseBranchNameTokenRule : ITokenRule<string> Constructors | Improve this Doc View Source BaseBranchNameTokenRule() Initializes a new instance of the BaseBranchNameTokenRule class. Declaration protected BaseBranchNameTokenRule() | Improve this Doc View Source BaseBranchNameTokenRule(String) Initializes a new instance of the BaseBranchNameTokenRule class with an optional regular expression pattern. Declaration protected BaseBranchNameTokenRule(string pattern) Parameters Type Name Description System.String pattern The regular expression pattern to use when replacing characters. Properties | Improve this Doc View Source Pattern Gets or sets the resolved pattern used to replace non-required characters. Declaration public Regex Pattern { get; protected set; } Property Value Type Description System.Text.RegularExpressions.Regex | Improve this Doc View Source Token Gets the token string. Declaration public abstract string Token { get; protected set; } Property Value Type Description System.String Methods | Improve this Doc View Source Apply(IVersionContext, IEnumerable<String>) Returns an enumerable of T where the rule token may have been applied of the token rule requires it. Declaration public virtual IEnumerable<string> Apply(IVersionContext context, IEnumerable<string> value) Parameters Type Name Description IVersionContext context The context of the current calculation. System.Collections.Generic.IEnumerable < System.String > value Returns Type Description System.Collections.Generic.IEnumerable < System.String > An enumerable of T where inclusion of the token may have been applied. | Improve this Doc View Source Resolve(IVersionContext, String) Resolve the T value using the given context. The result will have any application of the token replaced. Declaration public virtual string Resolve(IVersionContext context, string value) Parameters Type Name Description IVersionContext context The context of the current calculation. System.String value Returns Type Description System.String An instance of T with the tokens replaced. | Improve this Doc View Source ResolveBranchName(IVersionContext) Resolves the branch name value for this rule. Declaration protected abstract string ResolveBranchName(IVersionContext context) Parameters Type Name Description IVersionContext context The VersionContext of the current calculation. Returns Type Description System.String The branch name value. Implements ITokenRule<T> Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Rules.BranchNameSuffixTokenRule.html": {
    "href": "api/SimpleVersion.Rules.BranchNameSuffixTokenRule.html",
    "title": "Class BranchNameSuffixTokenRule",
    "keywords": "Class BranchNameSuffixTokenRule Applies rules for the branch name suffix rule. Inheritance System.Object BaseBranchNameTokenRule BranchNameSuffixTokenRule Implements ITokenRule < System.String > Inherited Members BaseBranchNameTokenRule.Pattern BaseBranchNameTokenRule.Apply(IVersionContext, IEnumerable<String>) BaseBranchNameTokenRule.Resolve(IVersionContext, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Rules Assembly : SimpleVersion.Core.dll Syntax public class BranchNameSuffixTokenRule : BaseBranchNameTokenRule, ITokenRule<string> Constructors | Improve this Doc View Source BranchNameSuffixTokenRule() Initializes a new instance of the BranchNameSuffixTokenRule class. Declaration public BranchNameSuffixTokenRule() | Improve this Doc View Source BranchNameSuffixTokenRule(String) Initializes a new instance of the BranchNameSuffixTokenRule class. Declaration public BranchNameSuffixTokenRule(string pattern) Parameters Type Name Description System.String pattern The regular expression pattern to use when replacing characters. Properties | Improve this Doc View Source Instance Gets a default instance of the rule. Declaration public static BranchNameSuffixTokenRule Instance { get; } Property Value Type Description BranchNameSuffixTokenRule | Improve this Doc View Source Token Gets the token string. Declaration public override string Token { get; protected set; } Property Value Type Description System.String Overrides BaseBranchNameTokenRule.Token Methods | Improve this Doc View Source ResolveBranchName(IVersionContext) Resolves the branch name value for this rule. Declaration protected override string ResolveBranchName(IVersionContext context) Parameters Type Name Description IVersionContext context The VersionContext of the current calculation. Returns Type Description System.String The branch name value. Overrides BaseBranchNameTokenRule.ResolveBranchName(IVersionContext) Implements ITokenRule<T> Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Rules.BranchNameTokenRule.html": {
    "href": "api/SimpleVersion.Rules.BranchNameTokenRule.html",
    "title": "Class BranchNameTokenRule",
    "keywords": "Class BranchNameTokenRule Applies rules for the friendly branch name token. Inheritance System.Object BaseBranchNameTokenRule BranchNameTokenRule Implements ITokenRule < System.String > Inherited Members BaseBranchNameTokenRule.Pattern BaseBranchNameTokenRule.Apply(IVersionContext, IEnumerable<String>) BaseBranchNameTokenRule.Resolve(IVersionContext, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Rules Assembly : SimpleVersion.Core.dll Syntax public class BranchNameTokenRule : BaseBranchNameTokenRule, ITokenRule<string> Constructors | Improve this Doc View Source BranchNameTokenRule() Initializes a new instance of the BranchNameTokenRule class. Declaration public BranchNameTokenRule() | Improve this Doc View Source BranchNameTokenRule(String) Initializes a new instance of the BranchNameTokenRule class. Declaration public BranchNameTokenRule(string pattern) Parameters Type Name Description System.String pattern The regular expression pattern to use when replacing characters. Properties | Improve this Doc View Source Instance Gets a default instance of the rule. Declaration public static BranchNameTokenRule Instance { get; } Property Value Type Description BranchNameTokenRule | Improve this Doc View Source Token Gets the token string. Declaration public override string Token { get; protected set; } Property Value Type Description System.String Overrides BaseBranchNameTokenRule.Token Methods | Improve this Doc View Source ResolveBranchName(IVersionContext) Resolves the branch name value for this rule. Declaration protected override string ResolveBranchName(IVersionContext context) Parameters Type Name Description IVersionContext context The VersionContext of the current calculation. Returns Type Description System.String The branch name value. Overrides BaseBranchNameTokenRule.ResolveBranchName(IVersionContext) Implements ITokenRule<T> Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Rules.HeightTokenRule.html": {
    "href": "api/SimpleVersion.Rules.HeightTokenRule.html",
    "title": "Class HeightTokenRule",
    "keywords": "Class HeightTokenRule Applies rules for the height. Inheritance System.Object HeightTokenRule Implements ITokenRule < System.String > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Rules Assembly : SimpleVersion.Core.dll Syntax public class HeightTokenRule : ITokenRule<string> Constructors | Improve this Doc View Source HeightTokenRule() Initializes a new instance of the HeightTokenRule class. Declaration public HeightTokenRule() | Improve this Doc View Source HeightTokenRule(Boolean) Initializes a new instance of the HeightTokenRule class. Declaration public HeightTokenRule(bool padded) Parameters Type Name Description System.Boolean padded True if the value should be padded. Properties | Improve this Doc View Source Instance Gets a default instance of the rule. Declaration public static HeightTokenRule Instance { get; } Property Value Type Description HeightTokenRule | Improve this Doc View Source Padded Gets a value indicating whether padding should be applied. Declaration public bool Padded { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Token Gets the token string. Declaration public string Token { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Apply(IVersionContext, IEnumerable<String>) Returns an enumerable of T where the rule token may have been applied of the token rule requires it. Declaration public IEnumerable<string> Apply(IVersionContext context, IEnumerable<string> input) Parameters Type Name Description IVersionContext context The context of the current calculation. System.Collections.Generic.IEnumerable < System.String > input Returns Type Description System.Collections.Generic.IEnumerable < System.String > An enumerable of T where inclusion of the token may have been applied. | Improve this Doc View Source Resolve(IVersionContext, String) Resolve the T value using the given context. The result will have any application of the token replaced. Declaration public string Resolve(IVersionContext context, string value) Parameters Type Name Description IVersionContext context The context of the current calculation. System.String value Returns Type Description System.String An instance of T with the tokens replaced. Implements ITokenRule<T> Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Rules.html": {
    "href": "api/SimpleVersion.Rules.html",
    "title": "Namespace SimpleVersion.Rules",
    "keywords": "Namespace SimpleVersion.Rules Classes BaseBranchNameTokenRule Base implementation to apply rules for branch name tokens. BranchNameSuffixTokenRule Applies rules for the branch name suffix rule. BranchNameTokenRule Applies rules for the friendly branch name token. HeightTokenRule Applies rules for the height. PullRequestIdTokenRule Applies rules for the pull-request token. ShortBranchNameTokenRule Applies rules for the short branch name. ShortShaTokenRule Applies rules for the short sha token. TokenRuleExtensions Extension methods to handle rules. Interfaces ITokenRule<T> Contract for a rule which applies for a specific token."
  },
  "api/SimpleVersion.Rules.ITokenRule-1.html": {
    "href": "api/SimpleVersion.Rules.ITokenRule-1.html",
    "title": "Interface ITokenRule<T>",
    "keywords": "Interface ITokenRule<T> Contract for a rule which applies for a specific token. Namespace : SimpleVersion.Rules Assembly : SimpleVersion.Abstractions.dll Syntax public interface ITokenRule<T> Type Parameters Name Description T The type affected by the rule. Properties | Improve this Doc View Source Token Gets the token string. Declaration string Token { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Apply(IVersionContext, IEnumerable<T>) Returns an enumerable of T where the rule token may have been applied of the token rule requires it. Declaration IEnumerable<T> Apply(IVersionContext context, IEnumerable<T> value) Parameters Type Name Description IVersionContext context The context of the current calculation. System.Collections.Generic.IEnumerable <T> value An enumerable of T values to possible update. Returns Type Description System.Collections.Generic.IEnumerable <T> An enumerable of T where inclusion of the token may have been applied. | Improve this Doc View Source Resolve(IVersionContext, T) Resolve the T value using the given context. The result will have any application of the token replaced. Declaration T Resolve(IVersionContext context, T value) Parameters Type Name Description IVersionContext context The context of the current calculation. T value The T value to resolve the token against. Returns Type Description T An instance of T with the tokens replaced. Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Rules.PullRequestIdTokenRule.html": {
    "href": "api/SimpleVersion.Rules.PullRequestIdTokenRule.html",
    "title": "Class PullRequestIdTokenRule",
    "keywords": "Class PullRequestIdTokenRule Applies rules for the pull-request token. Inheritance System.Object PullRequestIdTokenRule Implements ITokenRule < System.String > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Rules Assembly : SimpleVersion.Core.dll Syntax public class PullRequestIdTokenRule : ITokenRule<string> Properties | Improve this Doc View Source Instance Gets a default instance of the rule. Declaration public static PullRequestIdTokenRule Instance { get; } Property Value Type Description PullRequestIdTokenRule | Improve this Doc View Source Token Gets the token string. Declaration public string Token { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Apply(IVersionContext, IEnumerable<String>) Returns an enumerable of T where the rule token may have been applied of the token rule requires it. Declaration public IEnumerable<string> Apply(IVersionContext context, IEnumerable<string> input) Parameters Type Name Description IVersionContext context The context of the current calculation. System.Collections.Generic.IEnumerable < System.String > input Returns Type Description System.Collections.Generic.IEnumerable < System.String > An enumerable of T where inclusion of the token may have been applied. | Improve this Doc View Source Resolve(IVersionContext, String) Resolve the T value using the given context. The result will have any application of the token replaced. Declaration public string Resolve(IVersionContext context, string value) Parameters Type Name Description IVersionContext context The context of the current calculation. System.String value Returns Type Description System.String An instance of T with the tokens replaced. Implements ITokenRule<T> Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Rules.ShortBranchNameTokenRule.html": {
    "href": "api/SimpleVersion.Rules.ShortBranchNameTokenRule.html",
    "title": "Class ShortBranchNameTokenRule",
    "keywords": "Class ShortBranchNameTokenRule Applies rules for the short branch name. Inheritance System.Object BaseBranchNameTokenRule ShortBranchNameTokenRule Implements ITokenRule < System.String > Inherited Members BaseBranchNameTokenRule.Pattern BaseBranchNameTokenRule.Apply(IVersionContext, IEnumerable<String>) BaseBranchNameTokenRule.Resolve(IVersionContext, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Rules Assembly : SimpleVersion.Core.dll Syntax public class ShortBranchNameTokenRule : BaseBranchNameTokenRule, ITokenRule<string> Constructors | Improve this Doc View Source ShortBranchNameTokenRule() Initializes a new instance of the ShortBranchNameTokenRule class. Declaration public ShortBranchNameTokenRule() | Improve this Doc View Source ShortBranchNameTokenRule(String) Initializes a new instance of the ShortBranchNameTokenRule class. Declaration public ShortBranchNameTokenRule(string pattern) Parameters Type Name Description System.String pattern The regular expression pattern to use when replacing characters. Properties | Improve this Doc View Source Instance Gets a default instance of the rule. Declaration public static ShortBranchNameTokenRule Instance { get; } Property Value Type Description ShortBranchNameTokenRule | Improve this Doc View Source Token Gets the token string. Declaration public override string Token { get; protected set; } Property Value Type Description System.String Overrides BaseBranchNameTokenRule.Token Methods | Improve this Doc View Source ResolveBranchName(IVersionContext) Resolves the branch name value for this rule. Declaration protected override string ResolveBranchName(IVersionContext context) Parameters Type Name Description IVersionContext context The VersionContext of the current calculation. Returns Type Description System.String The branch name value. Overrides BaseBranchNameTokenRule.ResolveBranchName(IVersionContext) Implements ITokenRule<T> Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Rules.ShortShaTokenRule.html": {
    "href": "api/SimpleVersion.Rules.ShortShaTokenRule.html",
    "title": "Class ShortShaTokenRule",
    "keywords": "Class ShortShaTokenRule Applies rules for the short sha token. Inheritance System.Object ShortShaTokenRule Implements ITokenRule < System.String > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Rules Assembly : SimpleVersion.Core.dll Syntax public class ShortShaTokenRule : ITokenRule<string> Properties | Improve this Doc View Source Instance Gets a default instance of the rule. Declaration public static ShortShaTokenRule Instance { get; } Property Value Type Description ShortShaTokenRule | Improve this Doc View Source Token Gets the token string. Declaration public string Token { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Apply(IVersionContext, IEnumerable<String>) Returns an enumerable of T where the rule token may have been applied of the token rule requires it. Declaration public IEnumerable<string> Apply(IVersionContext context, IEnumerable<string> input) Parameters Type Name Description IVersionContext context The context of the current calculation. System.Collections.Generic.IEnumerable < System.String > input Returns Type Description System.Collections.Generic.IEnumerable < System.String > An enumerable of T where inclusion of the token may have been applied. | Improve this Doc View Source Resolve(IVersionContext, String) Resolve the T value using the given context. The result will have any application of the token replaced. Declaration public string Resolve(IVersionContext context, string value) Parameters Type Name Description IVersionContext context The context of the current calculation. System.String value Returns Type Description System.String An instance of T with the tokens replaced. Implements ITokenRule<T> Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Rules.TokenRuleExtensions.html": {
    "href": "api/SimpleVersion.Rules.TokenRuleExtensions.html",
    "title": "Class TokenRuleExtensions",
    "keywords": "Class TokenRuleExtensions Extension methods to handle rules. Inheritance System.Object TokenRuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Rules Assembly : SimpleVersion.Core.dll Syntax public static class TokenRuleExtensions Methods | Improve this Doc View Source ApplyTokenRules<T>(IEnumerable<T>, IVersionContext, IEnumerable<ITokenRule<T>>) Applies an enumerable of token rules to a value. Declaration public static IEnumerable<T> ApplyTokenRules<T>(this IEnumerable<T> value, IVersionContext context, IEnumerable<ITokenRule<T>> rules) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> value The instance value to be processed. IVersionContext context The VersionContext of the current version calculation. System.Collections.Generic.IEnumerable < ITokenRule <T>> rules The enumerable of rules to apply. Returns Type Description System.Collections.Generic.IEnumerable <T> The value once all rules have been applied. Type Parameters Name Description T The type of value to be processed. | Improve this Doc View Source ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>) Resolves an enumerable of token rules against a value. Declaration public static T ResolveTokenRules<T>(this T value, IVersionContext context, IEnumerable<ITokenRule<T>> rules) Parameters Type Name Description T value The instance value to be processed. IVersionContext context The VersionContext of the current version calculation. System.Collections.Generic.IEnumerable < ITokenRule <T>> rules The enumerable of rules to resolve. Returns Type Description T The value once all rules have been resolved. Type Parameters Name Description T The type of value to be processed."
  },
  "api/SimpleVersion.Serialization.Converters.DictionaryConverter.html": {
    "href": "api/SimpleVersion.Serialization.Converters.DictionaryConverter.html",
    "title": "Class DictionaryConverter",
    "keywords": "Class DictionaryConverter Enables reading/writing a dictionary as JSON. Implemented to support reading/writing non-standard keys. Inheritance System.Object System.Text.Json.Serialization.JsonConverter System.Text.Json.Serialization.JsonConverterFactory DictionaryConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Serialization.Converters Assembly : SimpleVersion.Core.dll Syntax public class DictionaryConverter : JsonConverterFactory Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type typeToConvert) Parameters Type Name Description System.Type typeToConvert Returns Type Description System.Boolean Overrides System.Text.Json.Serialization.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source CreateConverter(Type, JsonSerializerOptions) Declaration public override JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description System.Type typeToConvert System.Text.Json.JsonSerializerOptions options Returns Type Description System.Text.Json.Serialization.JsonConverter Overrides System.Text.Json.Serialization.JsonConverterFactory.CreateConverter(System.Type, System.Text.Json.JsonSerializerOptions) Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Serialization.Converters.DictionaryConverter-2.html": {
    "href": "api/SimpleVersion.Serialization.Converters.DictionaryConverter-2.html",
    "title": "Class DictionaryConverter<TKey, TValue>",
    "keywords": "Class DictionaryConverter<TKey, TValue> Enables reading/writing a dictionary as JSON. Implemented to support reading/writing non-standard keys. Inheritance System.Object System.Text.Json.Serialization.JsonConverter System.Text.Json.Serialization.JsonConverter < System.Collections.Generic.Dictionary <TKey, TValue>> DictionaryConverter<TKey, TValue> Inherited Members System.Text.Json.Serialization.JsonConverter<System.Collections.Generic.Dictionary<TKey, TValue>>.CanConvert(System.Type) System.Text.Json.Serialization.JsonConverter<System.Collections.Generic.Dictionary<TKey, TValue>>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) System.Text.Json.Serialization.JsonConverter<System.Collections.Generic.Dictionary<TKey, TValue>>.ReadAsPropertyName(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) System.Text.Json.Serialization.JsonConverter<System.Collections.Generic.Dictionary<TKey, TValue>>.Write(System.Text.Json.Utf8JsonWriter, System.Collections.Generic.Dictionary<TKey, TValue>, System.Text.Json.JsonSerializerOptions) System.Text.Json.Serialization.JsonConverter<System.Collections.Generic.Dictionary<TKey, TValue>>.WriteAsPropertyName(System.Text.Json.Utf8JsonWriter, System.Collections.Generic.Dictionary<TKey, TValue>, System.Text.Json.JsonSerializerOptions) System.Text.Json.Serialization.JsonConverter<System.Collections.Generic.Dictionary<TKey, TValue>>.HandleNull System.Text.Json.Serialization.JsonConverter.CanConvert(System.Type) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Serialization.Converters Assembly : SimpleVersion.Core.dll Syntax public class DictionaryConverter<TKey, TValue> : JsonConverter<Dictionary<TKey, TValue>> Type Parameters Name Description TKey The type of the key. TValue The value type. Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Declaration public override Dictionary<TKey, TValue> Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonReader reader System.Type typeToConvert System.Text.Json.JsonSerializerOptions options Returns Type Description System.Collections.Generic.Dictionary <TKey, TValue> Overrides System.Text.Json.Serialization.JsonConverter<System.Collections.Generic.Dictionary<TKey, TValue>>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) | Improve this Doc View Source Write(Utf8JsonWriter, Dictionary<TKey, TValue>, JsonSerializerOptions) Declaration public override void Write(Utf8JsonWriter writer, Dictionary<TKey, TValue> value, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonWriter writer System.Collections.Generic.Dictionary <TKey, TValue> value System.Text.Json.JsonSerializerOptions options Overrides System.Text.Json.Serialization.JsonConverter<System.Collections.Generic.Dictionary<TKey, TValue>>.Write(System.Text.Json.Utf8JsonWriter, System.Collections.Generic.Dictionary<TKey, TValue>, System.Text.Json.JsonSerializerOptions) Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Serialization.Converters.html": {
    "href": "api/SimpleVersion.Serialization.Converters.html",
    "title": "Namespace SimpleVersion.Serialization.Converters",
    "keywords": "Namespace SimpleVersion.Serialization.Converters Classes DictionaryConverter Enables reading/writing a dictionary as JSON. Implemented to support reading/writing non-standard keys. DictionaryConverter<TKey, TValue> Enables reading/writing a dictionary as JSON. Implemented to support reading/writing non-standard keys. IntConverter Enables converting a JSON number or string as an int."
  },
  "api/SimpleVersion.Serialization.Converters.IntConverter.html": {
    "href": "api/SimpleVersion.Serialization.Converters.IntConverter.html",
    "title": "Class IntConverter",
    "keywords": "Class IntConverter Enables converting a JSON number or string as an int. Inheritance System.Object System.Text.Json.Serialization.JsonConverter System.Text.Json.Serialization.JsonConverter < System.Int32 > IntConverter Inherited Members System.Text.Json.Serialization.JsonConverter<System.Int32>.CanConvert(System.Type) System.Text.Json.Serialization.JsonConverter<System.Int32>.ReadAsPropertyName(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) System.Text.Json.Serialization.JsonConverter<System.Int32>.WriteAsPropertyName(System.Text.Json.Utf8JsonWriter, System.Int32, System.Text.Json.JsonSerializerOptions) System.Text.Json.Serialization.JsonConverter<System.Int32>.HandleNull System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Serialization.Converters Assembly : SimpleVersion.Core.dll Syntax public class IntConverter : JsonConverter<int> Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Declaration public override int Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonReader reader System.Type typeToConvert System.Text.Json.JsonSerializerOptions options Returns Type Description System.Int32 Overrides System.Text.Json.Serialization.JsonConverter<System.Int32>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) | Improve this Doc View Source Write(Utf8JsonWriter, Int32, JsonSerializerOptions) Declaration public override void Write(Utf8JsonWriter writer, int value, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonWriter writer System.Int32 value System.Text.Json.JsonSerializerOptions options Overrides System.Text.Json.Serialization.JsonConverter<System.Int32>.Write(System.Text.Json.Utf8JsonWriter, System.Int32, System.Text.Json.JsonSerializerOptions) Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Serialization.html": {
    "href": "api/SimpleVersion.Serialization.html",
    "title": "Namespace SimpleVersion.Serialization",
    "keywords": "Namespace SimpleVersion.Serialization Classes Serializer Supports serialization to/from JSON."
  },
  "api/SimpleVersion.Serialization.Serializer.html": {
    "href": "api/SimpleVersion.Serialization.Serializer.html",
    "title": "Class Serializer",
    "keywords": "Class Serializer Supports serialization to/from JSON. Inheritance System.Object Serializer Implements ISerializer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Serialization Assembly : SimpleVersion.Core.dll Syntax public class Serializer : ISerializer Methods | Improve this Doc View Source Deserialize<T>(String) Deserializes the given value into an new instance of T . Declaration public T Deserialize<T>(string value) Parameters Type Name Description System.String value A string representation of T . Returns Type Description T An new instance of T populated from value . Type Parameters Name Description T The type to deserialize. | Improve this Doc View Source Serialize(Object) Serializes the given System.Object . Declaration public string Serialize(object value) Parameters Type Name Description System.Object value The instance value. Returns Type Description System.String A string representation of the given value . Implements ISerializer Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.Tool.html": {
    "href": "api/SimpleVersion.Tool.html",
    "title": "Namespace SimpleVersion.Tool",
    "keywords": "Namespace SimpleVersion.Tool Classes Program Command line entry point."
  },
  "api/SimpleVersion.Tool.Program.html": {
    "href": "api/SimpleVersion.Tool.Program.html",
    "title": "Class Program",
    "keywords": "Class Program Command line entry point. Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion.Tool Assembly : SimpleVersion.Tool.dll Syntax public sealed class Program Methods | Improve this Doc View Source Main(String[]) Entry point for SimpleVersion invocation. Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args The array of arguments. Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.VersionCalculator.html": {
    "href": "api/SimpleVersion.VersionCalculator.html",
    "title": "Class VersionCalculator",
    "keywords": "Class VersionCalculator Entry point for version calculation. Inheritance System.Object VersionCalculator Implements IVersionCalculator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion Assembly : SimpleVersion.Core.dll Syntax public class VersionCalculator : IVersionCalculator Constructors | Improve this Doc View Source VersionCalculator(String) Initializes a new instance of the VersionCalculator class. Declaration public VersionCalculator(string path) Parameters Type Name Description System.String path The path for the repository. Methods | Improve this Doc View Source GetResult() Gets the processed version result. Declaration public VersionResult GetResult() Returns Type Description VersionResult A complete VersionResult instance. | Improve this Doc View Source WriteResult(TextWriter) Writes the processed version result to the output . Declaration public void WriteResult(TextWriter output) Parameters Type Name Description System.IO.TextWriter output The writer for the result. Implements IVersionCalculator Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "api/SimpleVersion.VersionResult.html": {
    "href": "api/SimpleVersion.VersionResult.html",
    "title": "Class VersionResult",
    "keywords": "Class VersionResult Models the result object returned from version calculation. Inheritance System.Object VersionResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleVersion Assembly : SimpleVersion.Abstractions.dll Syntax public class VersionResult Properties | Improve this Doc View Source BranchName Gets or sets the friendly branch name of the current branch. Declaration public string BranchName { get; set; } Property Value Type Description System.String | Improve this Doc View Source CanonicalBranchName Gets or sets the full canonical name of the current branch. Declaration public string CanonicalBranchName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Formats Gets the collection of generated version strings. Declaration public IDictionary<string, string> Formats { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.String > | Improve this Doc View Source Height Gets or sets the calculated height. Declaration public int Height { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source HeightPadded Gets the height as a 0 padded four digit string. Declaration public string HeightPadded { get; } Property Value Type Description System.String | Improve this Doc View Source IsPullRequest Gets a value indicating whether the current branch is a pull request. Declaration public bool IsPullRequest { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRelease Gets or sets a value indicating whether the result is from a release configuration. Declaration public bool IsRelease { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Major Gets or sets the generated major version part. Declaration public int Major { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Minor Gets or sets the generated minor version part. Declaration public int Minor { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Patch Gets or sets the generated patch version part. Declaration public int Patch { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PullRequestNumber Gets the pull request number (if the current branch is a pull request). Declaration public int PullRequestNumber { get; } Property Value Type Description System.Int32 | Improve this Doc View Source RepositoryPath Gets or sets the path to the repository. Declaration public string RepositoryPath { get; set; } Property Value Type Description System.String | Improve this Doc View Source Revision Gets or sets the generated revision version part. Declaration public int Revision { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Sha Gets or sets the full sha of the current commit. Declaration public string Sha { get; set; } Property Value Type Description System.String | Improve this Doc View Source Sha7 Gets the shortened (7 char) sha of the current commit. Declaration public string Sha7 { get; } Property Value Type Description System.String | Improve this Doc View Source Version Gets or sets the generated version. Declaration public string Version { get; set; } Property Value Type Description System.String Extension Methods TokenRuleExtensions.ResolveTokenRules<T>(T, IVersionContext, IEnumerable<ITokenRule<T>>)"
  },
  "articles/configuration.html": {
    "href": "articles/configuration.html",
    "title": "Configuration",
    "keywords": "Configuration SimpleVersion reads the .simpleversion.json from the root of your git repository. This file provides various configuration options. Version The version property allows you to specify the base version to be generated. You may set the property with a version string that consists of one to four dot separated digits. All of the following are accepted values: \"version\" : \"1\" \"version\" : \"1.2\" \"version\" : \"1.2.3\" \"version\" : \"1.2.3.4\" Label The label property specifies an array of labels to be included in the version. \"label\" : [] \"label\" : [\"alpha1\"] \"label\" : [\"alpha1\", \"test\"] Note By specifying values in the label, the version will be returned as a pre-release version. If there is a pre-release label, the height will be appended to label. Metadata The metadata property specifies an array of values to be included as metadata in the final version. \"metadata\" : [] \"metadata\" : [\"demo\"] \"metadata\" : [\"demo\", \"sprint1\"] Warning Currently, only Semver2 format supports metadata . Offset Sometimes you may need to adjust the base value of the height. This could be when migrating from a previous versioning pattern, if a number of commits should be discounted, or any other reason. Specify the offset as a numeric value to impact the base value of the height: \"offset\" : -5 \"offset\" : 4 Branches The branches section allows for branch specific rules and configuration to be applied based on the branch currently being built. Release release allows for a list of regular expressions to be defined where each may match to the current branch being built. If the current branch does not match any of the expressions it will have the short sha of the current commit added to the label property prefixed with c (for commit). { \"version\": \"0.1.0\", \"label\": [ \"alpha2\" ], \"branches\": { \"release\": [ \"^refs/heads/master$\", \"^refs/heads/preview/.+$\", \"^refs/heads/release/.+$\" ] } } In the above example, any branch called master , starting with preview/ or starting with release/ will not have the short sha appended, generating a Semver2 version of 0.1.0-alpha2.5 when there are five commits. All other branches will append the short sha, generating a Semver2 version of 0.1.0-alpha2.5.c903782 when there are five commits and the sha begins with 903782 . Note Release branch configuration provides a simple way to identify what may be publicly shipped. If the version has a label containing the sha, you probably don't want it released. You can enable all branches to be release branches using the regular expression .* . Overrides Overrides allow for certain elements of the version to be reconfigured based on the branch being built. Overrides are matched by a regular expression where only the first match (if found) is used. { \"version\": \"0.2.0\", \"label\": [ \"alpha1\" ], \"branches\": { \"release\": [ \"^refs/heads/master$\", \"^refs/heads/preview/.+$\", \"^refs/heads/release/.+$\" ], \"overrides\": [ { \"match\": \"^refs/heads/feature/.+$\", \"metadata\": [ \"{shortbranchname}\" ] }, { \"match\": \"^refs/heads/release/.+$\", \"label\": [], \"metadata\": [ \"*\" ] } ] } } In the above example, any branch starting with feature/ will add the branches shortname as metadata to the generated version. E.g. feature/testing will create a version of 0.2.0-alpha1.5.c903782+featuretesting when there are five commits and the sha begins with 903782 . Additionally, any branch beginning with release/ will strip the release label and have the height added into the metadata. Warning Overrides will allow the same commit to be built with different versions depending on the current branch. Override Properties Override configuration has access to the following properties Key Type Required Description match string true Branches with a canonical branch name matching this regular expression will be overridden label string array false Overrides label from the base configuration prefixlabel string array false Prefixes the base configuration label with the given values postfixlabel string array false Postfixes the base configuration label with the given values insertlabel int/string dictionary false Inserts the given values into the base label at the index specified metadata string array false Overrides metadata from the base configuration prefixmetadata string array false Prefixes the base configuration metadata with the given values postfixmetadata string array false Postfixes the base configuration metadata with the given values insertmetadata int/string dictionary false Inserts the given values into the base metadata at the index specified Replacement Tokens SimpleVersion allows specific tokens to be used in some properties to allow substitution of values during invocation. The following tokens may be used: Name Token Where Description Height * version , label , metadata Inserts the calculated height Branch Name {branchname} label , metadata Inserts the canonical branch name, stripped of non-alphanumeric characters Short Branch Name {shortbranchname} label , metadata Inserts the friendly branch name, stripped of non-alphanumeric characters Branch Name Suffix {branchnamesuffix} label , metadata Inserts the last segment of the canonical name of a branch Short Sha {shortsha} label , metadata Inserts the first seven characters of the commit sha, prefixed with c (for commit) Pull-Request Id {pr} label , metadata Inserts the id of the pull-request (or 0 by default)"
  },
  "articles/environments.html": {
    "href": "articles/environments.html",
    "title": "Environments",
    "keywords": "Environments SimpleVersion attempts to identify git information from the local environment. When running on Continuous Integration (CI) systems you may need to prepare the environment to cater for the CI systems specific approach to builds. Azure Devops Azure Devops is identified as the build environment when the environment variable TF_BUILD is set. When identified, the canonical and friendly branch names are derived from the BUILD_SOURCEBRANCH environment variable. Fallback Environment For all environments, the build branch can be overridden by setting simpleversion.sourcebranch to the full canonical branch name . When this variable is set it will override the resolution from any CI system as well as the local repository branch name. TeamCity When building with TeamCity you can lift the branch name of the build to an environment variable by doing the following: Open your build configuration, and select Parameters Add a new paramter called env.simpleversion.sourcebranch Set the value to %teamcity.build.vcs.branch.{vcsid}% where {vcsid} is the VCS Root of your repo"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Introduction",
    "keywords": "Introduction SimpleVersion is available as a cross-platform dotnet tool and core libraries for direct consumption in a project. To get a better understanding of the values returned from invoking SimpleVersion see the results documentation . Dotnet Tool The latest version of the dotnet tool can be found on nuget.org. You can install SimpleVersion.Tool using the dotnet cli : # Installs the latest version as a global tool dotnet tool install SimpleVersion.Tool -g # Or a specific version dotnet tool install SimpleVersion.Tool -g --version 0.3.0-alpha1.2 Once installed, you can invoke SimpleVersion in your favorite shell, optionally passing the path to your repository (defaults to current working directory) PS c:\\MyRepo> simpleversion PS c:\\> simpleversion ./MyRepo Local Tools Beginning with net core 3.0, you can install tools locally to a project. Doing so enables persistance of the tool version along side the code base. Run the following from the root of your project to install and run as a local tool: # Create a tool manifest PS c:\\MyRepo> dotnet new tool-manifest # Add the tool PS c:\\MyRepo> dotnet tool install SimpleVersion.Tool # Or a specific version PS c:\\MyRepo> dotnet tool install SimpleVersion.Tool --version 0.3.0-alpha1.2 Local tools can be invoked after they have been restored: # Restore PS c:\\MyRepo> dotnet tool restore # Run PS c:\\MyRepo> dotnet simpleversion Usage in Cake The dotnet tool can be integrated into a Cake build script. This makes use of the Cake.DotNetTool.Module to enable installing SimpleVersion.Tool . You will need to run .\\build.ps1 --bootstrap prior to running .\\build.ps1 to ensure correct installation of the tool. A simple build.cake can invoke the SimpleVersion : // Install dotnet core tool module #module nuget:?package=Cake.DotNetTool.Module&version=0.4.0 // Install SimpleVersion dotnet tool #tool dotnet:?package=SimpleVersion.Tool&version=0.3.0 // Install newtonsoft to parse result #addin nuget:?package=Newtonsoft.Json&version=12.0.3 // Import newtonsoft namespace for parsing using Newtonsoft.Json.Linq; ////////////////////////////////////////////////////////////////////// // ARGUMENTS ////////////////////////////////////////////////////////////////////// var target = Argument(\"target\", \"Default\"); var versionFormat = Argument(\"versionFormat\", \"Semver1\"); ////////////////////////////////////////////////////////////////////// // TASKS ////////////////////////////////////////////////////////////////////// Task(\"Build\") .Does(() => { // Call SimpleVersion to get version information StartProcess( Context.Tools.Resolve(\"simpleversion.exe\"), new ProcessSettings{ RedirectStandardOutput = true }, out var simpleVersionOut // capture output for parsing ); // Parse json result dynamic simpleVersion = JObject.Parse(string.Join(\"\", simpleVersionOut)); // Display version - Access formats dictionary or other properties Information(simpleVersion.Formats[versionFormat]); }); ////////////////////////////////////////////////////////////////////// // TASK TARGETS ////////////////////////////////////////////////////////////////////// Task(\"Default\") .IsDependentOn(\"Build\"); ////////////////////////////////////////////////////////////////////// // EXECUTION ////////////////////////////////////////////////////////////////////// RunTarget(target); Which can then be invoked as: PS .\\build.ps1 --bootstrap; .\\build.ps1 Preparing to run build script... Running build script... Preparing to run build script... Running build script... ======================================== Build ======================================== 0.3.0-alpha1-0002-c6c70600 ======================================== Default ======================================== Task Duration -------------------------------------------------- Build 00:00:00.3256116 -------------------------------------------------- Total: 00:00:00.3304598 You change the arguments passed to SimpleVersion using the ProcessSettings class."
  },
  "articles/results.html": {
    "href": "articles/results.html",
    "title": "Results",
    "keywords": "Results How you handle the results of SimpleVersion will vary based on how you are invoking the tool. However, all implementations return the same results object. The following is an example from invoking the command line tool: { \"Version\": \"0.1.0\", \"Major\": 0, \"Minor\": 1, \"Patch\": 0, \"Revision\": 0, \"Height\": 18, \"HeightPadded\": \"0018\", \"Sha\": \"ebc8f22ae83bfa3c1e36d6bf70c2a383ae30c9dd\", \"Sha7\": \"ebc8f22\", \"CanonicalBranchName\": \"refs/heads/preview/test\", \"BranchName\": \"preview/test\", \"Formats\": { \"Semver1\": \"0.1.0-alpha2-0018\", \"Semver2\": \"0.1.0-alpha2.18\" } } Properties Name Type Value Details Version int . int . int (. int ) The Major.Minor.Patch version value. If Revision was provided in the original format, it will also be included. Major int The Major value reported in the Version string Minor int The Minor value reported in the Version string Patch int The Patch value reported in the Version string Revision int The Revision value. Always 0 even if not included in the Version string Height int The calculated height HeightPadded int The calculated height padded to four digits Sha string The sha of the current commit at the time of invocation Sha7 string The sha of the current commit at the time of invocation, shortened to 7 characters BranchName string The checked out branch at the time of invocation CanonicalBranchName string The full canonical name of the checked out branch at the time of invocation Formats Formats are specified combinations of the result values that follow a specification. Currently only built in formats are supported, however custom formats will be supported in a future version. Name Type Value Details Semver1 string The full version string following the Semver1 spec Semver2 string The full version string following the Semver2 spec"
  },
  "index.html": {
    "href": "index.html",
    "title": "SimpleVersion",
    "keywords": "SimpleVersion SimpleVersion aims to simplify how you version the artifacts of your git repository. Using SimpleVersion you can generate consistent, expected version numbers for each commit in your repository, based on a few simple configuration options. SimpleVersion uses some base configuration and the 'height' of your commit history to generate a version. Height is calculated as the number of commits since the last change to the .simpleversion.json file . Important You must commit changes to the file for SimpleVersion to identify the change. Future versions of SimpleVersion aim to provide: Validation of the version based on branch configuration Custom formatting configuration to support custom versioning schemes Override logic with custom token replacement syntax and more! Why? SimpleVersion borrows ideas from other excellent versioning tools, notably: GitVersion and NerdBank.GitVersioning . These tools also deliver the ability to version your repository based on the commits but work in a different manner: GitVersion relies heavily on branch names, merge messages and more. I have found this can sometimes cause issues without extreme management of best practices. Nerdbank is an excellent tool that removes many of the issues I ran into with GitVersion, however is more limited in scope for custom labelling formats. Usage To use SimpleVersion, you simply need to add a .simpleversion.json file to the root of your git repository and commit it. Configuration { \"version\": \"0.1.0\", \"label\": [ \"alpha2\" ], \"branches\": { \"release\": [ \"^refs/heads/master$\", \"^refs/heads/preview/.+$\", \"^refs/heads/release/.+$\" ] } } The above configuration tells SimpleVersion that the version will be 0.1.0 and should have a release label of alpha2 . As there is a pre-release label, the height will be appended to label, generating a Semver2 version 0.1.0-alpha2.3 if there were three commits since the version was last set. For further guidance, see the configuration documentation . Resetting The Height The height will be reset to 0 when SimpleVersion detects a change to either the version or the label in the .simpleversion.json file."
  }
}